@import '../../../styles/variables';

// Variables
$text-color: #ffffff;
$font-size-base: 21em;
$text-shadow: 0 2px 9px rgba(0, 0, 0, 0.5);
$letter-spacing: 0.03em;

@mixin layer-type-backgrounds {
	@each $layer-type in $layer-types {
		&.#{$layer-type} {
			// Background:
			display: inline-block;
			width: 207px;
			height: 126px;
			line-height: 126px;

			background-color: var(--segment-layer-background-#{$layer-type});

			&.second {
				background-color: var(--segment-layer-background-#{$layer-type}--second);
			}
		}
	}
}

// Base icon styles
.clock-view-piece-icon {
	// Container layout
	position: relative;
	width: 207px;
	height: 126px;

	// Text styles:
	fill: $text-color;
	font-family: Roboto Flex;
	filter: drop-shadow($text-shadow);
	font-size: $font-size-base;
	letter-spacing: $letter-spacing;
	font-variation-settings: 'GRAD' 0, 'XOPQ' 96, 'XTRA' 468, 'YOPQ' 79, 'YTAS' 750, 'YTDE' -203, 'YTFI' 738, 'YTLC' 514, 'YTUC' 712, 
	'opsz' 80,
	'slnt' 0, 
	'wdth' 50, 
	'wght' 400;

	span {
		// Common styles
		@include layer-type-backgrounds; // Apply to all span elements that have layer type classes

		// Position text inside the icon
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		display: flex;
		justify-content: center;
		align-items: center;
		z-index: 2;
	}

	.piece-icon-text {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		display: flex;
		justify-content: center;
		align-items: center;
		z-index: 2;
	}

	.live-speak {
		--vt-color-light: color-mix(in srgb, var(--segment-layer-background-#{'vt'}) 90%, white);
		--camera-color-light: color-mix(in srgb, var(--segment-layer-background-#{'camera'}) 90%, white);

		background-image: linear-gradient(to bottom, var(--vt-color-light) 50%, var(--camera-color-light) 50%);
		display: flex;
		justify-content: center;
		align-items: center;
	}

	// Split view container and layers
	.split-view {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		border-radius: 4px;
		overflow: hidden;
		z-index: 1;

		// Apply item-type-colors to each source layer type
		@each $layer-type in $layer-types {
			> .#{$layer-type} {
				position: absolute;
				left: 0;
				width: 100%;
				background-color: var(--segment-layer-background-#{$layer-type});

				&.second {
					background-color: var(--segment-layer-background-#{$layer-type}--second);
				}
			}
		}

		// Position the layers
		> div:first-child {
			top: 0;
			height: 50%;
			border-top-left-radius: 4px;
			border-top-right-radius: 4px;
		}

		> div:last-child {
			bottom: 0;
			height: 50%;
			border-bottom-left-radius: 4px;
			border-bottom-right-radius: 4px;
		}
	}
}
